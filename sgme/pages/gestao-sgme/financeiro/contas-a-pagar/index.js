import React, {useEffect, useState} from 'react';
import Link from "next/link";
import Head from "next/head";
import {http} from "@/utils/http";
import DespesaItem from "@/components/DespesaItem";
import Paginacao from "@/components/Paginacao";
import {getReceitasData} from "@/utils/getReceitas";
import {getDespesasData} from "@/utils/getDespesas";
import {format, parseISO} from "date-fns";
import {ptBR} from "date-fns/locale";

function Index(props) {

    const [despesas, setDespesas] = useState([]);
    useEffect(() => {
        const getData = async () => {
            try {
                const despesasData = await getDespesasData();
                setDespesas(despesasData);
            } catch (error) {
                console.error("Erro ao buscar dados", error);
            }
        };


        getData();
    }, []);


    return (
        <>
            <Head>
                <title>SGME-Contas a pagar</title>
                <meta name="description" content="Generated by create next app"/>
                <meta name="viewport" content="width=device-width, initial-scale=1"/>
                <link rel="icon" href="/favicon.ico"/>
            </Head>

            <main className="container">
                <div className="container d-sm-flex flex-row justify-content-between mb-3">
                    <h3>Contas a Pagar</h3>
                    <Link href="/gestao-sgme/financeiro/contas-a-pagar/cadastro" className="btn btn-success">Novo Conta
                        a Pagar</Link>
                </div>

                <div className="overflow-x-scroll">
                    <table className="table">
                        <thead>
                        <tr className="border border-2 border-warning">
                            <th scope="col">Fornecedor</th>
                            <th scope="col">Valor</th>
                            <th scope="col">Vencimento</th>
                            <th scope="col">Status</th>
                            <th scope="col" className=" d-flex justify-content-end">Ações</th>

                        </tr>
                        </thead>
                        <tbody>

                        {despesas && despesas.length > 0 ? (
                            despesas.map(despesa => (
                                <tr key={despesa.id}>
                                    <td>{despesa.nomeFornecedor}</td>
                                    <td>R$ {despesa.valor.toFixed(2)}</td>
                                    <td>{format(parseISO(despesa.data_vencimento), 'dd/MM/yyyy', {locale: ptBR})}</td>
                                    <td>{despesa.status}</td>
                                    <td className="d-flex justify-content-end">
                                        <Link href={`/gestao-sgme/financeiro/contas-a-pagar/update/${despesa.id}`}
                                              className="btn btn-success me-2">EDITAR</Link>
                                        <Link href={`/gestao-sgme/financeiro/contas-a-pagar/delete/${despesa.id}`}
                                              className="btn btn-danger">EXCLUIR</Link>
                                    </td>
                                </tr>
                            ))
                        ) : (
                            <tr>
                                <td colSpan="6">Nenhuma despesa encontrada.</td>
                            </tr>
                        )}

                        </tbody>

                    </table>
                </div>

            </main>
        </>

    );
}

export default Index;